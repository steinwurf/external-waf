#! /usr/bin/env python
# encoding: utf-8

import json

from fake_git import FakeGit

APPNAME = "test_add_dependency"
VERSION = "1.0.0"


def resolve(ctx):
    # Provide the clone mapping - needed in the FakeGitClone. The json file
    # is created in test_add_dependency.py
    # with open('clone_path.json') as json_file:
    #     clone_path = json.load(json_file)

    # ctx.registry.provide_value('clone_path', clone_path)

    # Get the registry and replace the git builder
    ctx.registry.provide_function("git", FakeGit, override=True)

    # Rebuild the dependency manager
    ctx.dependency_manager = ctx.registry.require("dependency_manager")


def options(opt):
    opt.load("compiler_cxx")


def configure(conf):
    conf.load("compiler_cxx")


def build(bld):
    bld.program(features="cxx", source="main.cpp", target="app", use=["foo", "baz"])
